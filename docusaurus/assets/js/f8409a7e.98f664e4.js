"use strict";(self.webpackChunk_niivue_docs=self.webpackChunk_niivue_docs||[]).push([["147"],{4241:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>d,default:()=>m,assets:()=>l,toc:()=>u,frontMatter:()=>c});var t=JSON.parse('{"id":"intro","title":"Getting started","description":"NiiVue is module for loading, parsing, and viewing medical imaging data in the browser.","source":"@site/docs/intro.mdx","sourceDirName":".","slug":"/intro","permalink":"/niivue/docusaurus/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/niivue/niivue/docs/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar"}'),s=i("2322"),a=i("2840"),r=i("7959"),o=i("7128");let c={sidebar_position:1},d="Getting started",l={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Embedded canvas example",id:"embedded-canvas-example",level:2},{value:"Full component code",id:"full-component-code",level:2}];function h(e){let n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,s.jsx)(n.p,{children:"NiiVue is module for loading, parsing, and viewing medical imaging data in the browser."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": NiiVue is not intended to be used in Node.js environments. It is designed to be used in the browser to ",(0,s.jsx)(n.em,{children:"view"})," data and a WebGL2 rendering context is required."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"To install NiiVue, you can use your favorite package manager:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @niivue/niivue\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Niivue"})," class can be used in any framework or plain JavaScript. Here is an example of how to use it in a React component. However, you will probably want to use ",(0,s.jsx)(n.code,{children:"useRef"})," or ",(0,s.jsx)(n.code,{children:"useContext"})," with your initialised ",(0,s.jsx)(n.code,{children:"Niivue"})," instance to interact with it for better performance and reduce re-renders."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { useRef, useEffect } from "react";\nimport { Niivue } from "@niivue/niivue";\n\nconst NiiVue = ({ imageUrl }) => {\n  const canvas = useRef();\n  useEffect(() => {\n    const volumeList = [\n      {\n        url: imageUrl,\n      },\n    ];\n    const nv = new Niivue();\n    nv.attachToCanvas(canvas.current);\n    nv.loadVolumes(volumeList);\n  }, [imageUrl]);\n\n  return <canvas ref={canvas} height={480} width={640} />;\n};\n\n// use as: <NiiVue imageUrl={someUrl}> </NiiVue>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"embedded-canvas-example",children:"Embedded canvas example"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Go ahead, click around in the viewer below"}),". That's NiiVue in action! In this example, we are loading a single Nifti file. This is rendered in our Docusaurus MDX page using a custom React component."]}),"\n",(0,s.jsx)(r.k,{children:(0,s.jsx)(o.M,{images:[{url:"https://niivue.github.io/niivue-demo-images/mni152.nii.gz"}]})}),"\n",(0,s.jsx)(n.h2,{id:"full-component-code",children:"Full component code"}),"\n",(0,s.jsx)(n.p,{children:"Here's the full component code that was used to render the canvas above:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import React from "react";\nimport { Niivue } from "@niivue/niivue";\n\nexport default function NiivueCanvas({ images, nvOpts }) {\n  // get the origin url and prepend it to the url propery of the images\n  const origin = window.location.origin;\n  // needed due to the way docusaurus serves static files with github orgs pages\n  const basePath = \'/niivue\'; \n  images = images.map((img) => {\n    return { ...img, url: origin + basePath + img.url };\n  });\n  // canvas ref\n  const canvasRef = React.useRef(null);\n  const niivue = React.useRef(null);\n  // intialise niivue instance on first mount\n  React.useEffect(() => {\n    niivue.current = new Niivue({logLevel: \'debug\', ...nvOpts});\n    niivue.current.attachToCanvas(canvasRef.current);\n    niivue.current.loadVolumes(images);\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: "100%",\n        height: "100%",\n        display: "flex",\n        justifyContent: "center",\n        alignItems: "center",\n      }}\n    >\n      <canvas ref={canvasRef} width={640} height={480}></canvas>\n    </div>\n  );\n}\n```../src/components/BasicNiivueCanvas\n'})})]})}function m(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);